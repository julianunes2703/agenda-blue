import streamlit as st
import pandas as pd

# =========================
# LISTA DE EMPRESAS
# =========================
empresas = [
    "Anjos distribuidoras", "Idroove", "B&C Transportes", "MPA", "Midas Marmoraria", "Uanga", "Decor Fest",
    "Arcante", "MadRock", "Porquitos", "IPP", "Latic√≠nios Sampa Rio", "Shiny Toys", "Minghini Cuccina",
    "Masterlar", "Imagine Hidro & G√°s", "SP Aluminio", "Ferragens Brasil", "POS", "Alpha Quality",
    "Mithra Cherici", "Indiana", "Itatex", "Vida Animal", "Inme", "Supermecado Mana", "JLP",
    "Binotto", "Rodomoto", "DGosto"
]

# Fun√ß√£o para identificar empresa no t√≠tulo da reuni√£o
def identificar_empresa(titulo, empresas):
    titulo_lower = str(titulo).lower()
    for empresa in empresas:
        if empresa.lower() in titulo_lower:
            return empresa
    return "N√£o identificada"


# =========================
# CARREGAR DADOS
# =========================
CSV_URL = "https://docs.google.com/spreadsheets/d/e/2PACX-1vSsw_WO1DoVu76FQ7rhs1S8CPBo0FRQ7VmoCpZBGV9WTsRdZm7TduvnKQnTVKR40vbMzQU3ypTj8Ls7/pub?gid=212895287&single=true&output=csv"
df = pd.read_csv(CSV_URL)

# Converter a coluna 'Data' para datetime
df['Data'] = pd.to_datetime(df['Data'], errors='coerce')

# Remover duplicatas (mesma data, funcion√°rio e t√≠tulo)
df = df.drop_duplicates(subset=['Data', 'Funcion√°rio', 'T√≠tulos'], keep='first')

# Detectar empresas nos t√≠tulos
df['EmpresaDetectada'] = df['T√≠tulos'].apply(lambda t: identificar_empresa(t, empresas))


# =========================
# DASHBOARD STREAMLIT
# =========================
st.title("üìä Dashboard de Reuni√µes - Consultoria Empresarial")

# Filtro de data
data_selecionada = st.date_input("Selecione a data", pd.to_datetime("today"))
df_filtrado = df[df['Data'].dt.strftime('%Y-%m-%d') == data_selecionada.strftime('%Y-%m-%d')]

# Mostrar reuni√µes do dia
st.subheader(f"üìÖ Reuni√µes em {data_selecionada.strftime('%d/%m/%Y')}")
if df_filtrado.empty:
    st.write("Nenhuma reuni√£o encontrada para essa data.")
else:
    st.write(df_filtrado[['Data', 'T√≠tulos', 'Funcion√°rio', 'Participantes', 'EmpresaDetectada']])

    # Gr√°fico: reuni√µes por funcion√°rio
    st.subheader("üë©‚Äçüíº Reuni√µes por Funcion√°rio")
    reunioes_por_funcionario = df_filtrado['Funcion√°rio'].value_counts()
    st.bar_chart(reunioes_por_funcionario)

    # Gr√°fico: reuni√µes por empresa detectada
    st.subheader("üè¢ Reuni√µes por Empresa (detectada no t√≠tulo)")
    reunioes_por_empresa = df_filtrado['EmpresaDetectada'].value_counts()
    st.bar_chart(reunioes_por_empresa)

    # Resumo: funcion√°rios que participaram por empresa
    st.subheader("üìå Funcion√°rios por Empresa (reuni√µes do dia)")
    for empresa, grupo in df_filtrado.groupby('EmpresaDetectada'):
        if empresa != "N√£o identificada":
            funcionarios = grupo['Funcion√°rio'].unique()
            st.write(f"**{empresa}** ‚Üí {len(grupo)} reuni√µes ‚Üí Funcion√°rios: {', '.join(funcionarios)}")
